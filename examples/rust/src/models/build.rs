/*
 * Secure Build API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Build {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "gitRef", skip_serializing_if = "Option::is_none")]
    pub git_ref: Option<Box<crate::models::GitRef>>,
    #[serde(rename = "buildCommand", skip_serializing_if = "Option::is_none")]
    pub build_command: Option<Vec<String>>,
    #[serde(rename = "buildType", skip_serializing_if = "Option::is_none")]
    pub build_type: Option<BuildType>,
}

impl Build {
    pub fn new() -> Build {
        Build {
            id: None,
            git_ref: None,
            build_command: None,
            build_type: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum BuildType {
    #[serde(rename = "go")]
    Go,
}

impl Default for BuildType {
    fn default() -> BuildType {
        Self::Go
    }
}

