/*
 * Secure Build API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

/// SlsaProvenanceV1PredicateRunDetails : A structure representing the run details of the SLSA Provenance v1 Predicate.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SlsaProvenanceV1PredicateRunDetails {
    #[serde(rename = "builder")]
    pub builder: Box<crate::models::SlsaProvenanceV1PredicateRunDetailsBuilder>,
    /// Additional artifacts generated during the build that are not considered the “output” of the build but that might be needed during debugging or incident response. For example, this might reference logs generated during the build and/or a digest of the fully evaluated build configuration.\\nIn most cases, this SHOULD NOT contain all intermediate files generated during the build. Instead, this SHOULD only contain files that are likely to be useful later and that cannot be easily reproduced.
    #[serde(rename = "byproducts", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub byproducts: Option<Option<Vec<crate::models::SlsaProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner>>>,
    #[serde(rename = "metadata", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Option<Box<crate::models::SlsaProvenanceV1PredicateRunDetailsMetadata>>>,
}

impl SlsaProvenanceV1PredicateRunDetails {
    /// A structure representing the run details of the SLSA Provenance v1 Predicate.
    pub fn new(builder: crate::models::SlsaProvenanceV1PredicateRunDetailsBuilder) -> SlsaProvenanceV1PredicateRunDetails {
        SlsaProvenanceV1PredicateRunDetails {
            builder: Box::new(builder),
            byproducts: None,
            metadata: None,
        }
    }
}


