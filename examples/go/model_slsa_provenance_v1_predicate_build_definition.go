/*
Secure Build API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SLSAProvenanceV1PredicateBuildDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SLSAProvenanceV1PredicateBuildDefinition{}

// SLSAProvenanceV1PredicateBuildDefinition A structure representing the build definition of the SLSA Provenance v1 Predicate.
type SLSAProvenanceV1PredicateBuildDefinition struct {
	BuildType string `json:"buildType"`
	// The parameters that are under external control, such as those set by a user or tenant of the build platform. They MUST be complete at SLSA Build L3, meaning that there is no additional mechanism for an external party to influence the build. (At lower SLSA Build levels, the completeness MAY be best effort.)\\nThe build platform SHOULD be designed to minimize the size and complexity of externalParameters, in order to reduce fragility and ease verification. Consumers SHOULD have an expectation of what “good” looks like; the more information that they need to check, the harder that task becomes.\\nVerifiers SHOULD reject unrecognized or unexpected fields within externalParameters.
	ExternalParameters map[string]interface{} `json:"externalParameters"`
	// Unordered collection of artifacts needed at build time. Completeness is best effort, at least through SLSA Build L3. For example, if the build script fetches and executes “example.com/foo.sh”, which in turn fetches “example.com/bar.tar.gz”, then both “foo.sh” and “bar.tar.gz” SHOULD be listed here.
	InternalParameters map[string]interface{} `json:"internalParameters,omitempty"`
	// Unordered collection of artifacts needed at build time. Completeness is best effort, at least through SLSA Build L3. For example, if the build script fetches and executes “example.com/foo.sh”, which in turn fetches “example.com/bar.tar.gz”, then both “foo.sh” and “bar.tar.gz” SHOULD be listed here.
	ResolvedDependencies []SLSAProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner `json:"resolvedDependencies,omitempty"`
}

// NewSLSAProvenanceV1PredicateBuildDefinition instantiates a new SLSAProvenanceV1PredicateBuildDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSLSAProvenanceV1PredicateBuildDefinition(buildType string, externalParameters map[string]interface{}) *SLSAProvenanceV1PredicateBuildDefinition {
	this := SLSAProvenanceV1PredicateBuildDefinition{}
	this.BuildType = buildType
	this.ExternalParameters = externalParameters
	return &this
}

// NewSLSAProvenanceV1PredicateBuildDefinitionWithDefaults instantiates a new SLSAProvenanceV1PredicateBuildDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSLSAProvenanceV1PredicateBuildDefinitionWithDefaults() *SLSAProvenanceV1PredicateBuildDefinition {
	this := SLSAProvenanceV1PredicateBuildDefinition{}
	return &this
}

// GetBuildType returns the BuildType field value
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetBuildType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuildType
}

// GetBuildTypeOk returns a tuple with the BuildType field value
// and a boolean to check if the value has been set.
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetBuildTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuildType, true
}

// SetBuildType sets field value
func (o *SLSAProvenanceV1PredicateBuildDefinition) SetBuildType(v string) {
	o.BuildType = v
}

// GetExternalParameters returns the ExternalParameters field value
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetExternalParameters() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ExternalParameters
}

// GetExternalParametersOk returns a tuple with the ExternalParameters field value
// and a boolean to check if the value has been set.
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetExternalParametersOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ExternalParameters, true
}

// SetExternalParameters sets field value
func (o *SLSAProvenanceV1PredicateBuildDefinition) SetExternalParameters(v map[string]interface{}) {
	o.ExternalParameters = v
}

// GetInternalParameters returns the InternalParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetInternalParameters() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.InternalParameters
}

// GetInternalParametersOk returns a tuple with the InternalParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetInternalParametersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.InternalParameters) {
		return map[string]interface{}{}, false
	}
	return o.InternalParameters, true
}

// HasInternalParameters returns a boolean if a field has been set.
func (o *SLSAProvenanceV1PredicateBuildDefinition) HasInternalParameters() bool {
	if o != nil && IsNil(o.InternalParameters) {
		return true
	}

	return false
}

// SetInternalParameters gets a reference to the given map[string]interface{} and assigns it to the InternalParameters field.
func (o *SLSAProvenanceV1PredicateBuildDefinition) SetInternalParameters(v map[string]interface{}) {
	o.InternalParameters = v
}

// GetResolvedDependencies returns the ResolvedDependencies field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetResolvedDependencies() []SLSAProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner {
	if o == nil {
		var ret []SLSAProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner
		return ret
	}
	return o.ResolvedDependencies
}

// GetResolvedDependenciesOk returns a tuple with the ResolvedDependencies field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SLSAProvenanceV1PredicateBuildDefinition) GetResolvedDependenciesOk() ([]SLSAProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner, bool) {
	if o == nil || IsNil(o.ResolvedDependencies) {
		return nil, false
	}
	return o.ResolvedDependencies, true
}

// HasResolvedDependencies returns a boolean if a field has been set.
func (o *SLSAProvenanceV1PredicateBuildDefinition) HasResolvedDependencies() bool {
	if o != nil && IsNil(o.ResolvedDependencies) {
		return true
	}

	return false
}

// SetResolvedDependencies gets a reference to the given []SLSAProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner and assigns it to the ResolvedDependencies field.
func (o *SLSAProvenanceV1PredicateBuildDefinition) SetResolvedDependencies(v []SLSAProvenanceV1PredicateBuildDefinitionResolvedDependenciesInner) {
	o.ResolvedDependencies = v
}

func (o SLSAProvenanceV1PredicateBuildDefinition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SLSAProvenanceV1PredicateBuildDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["buildType"] = o.BuildType
	toSerialize["externalParameters"] = o.ExternalParameters
	if o.InternalParameters != nil {
		toSerialize["internalParameters"] = o.InternalParameters
	}
	if o.ResolvedDependencies != nil {
		toSerialize["resolvedDependencies"] = o.ResolvedDependencies
	}
	return toSerialize, nil
}

type NullableSLSAProvenanceV1PredicateBuildDefinition struct {
	value *SLSAProvenanceV1PredicateBuildDefinition
	isSet bool
}

func (v NullableSLSAProvenanceV1PredicateBuildDefinition) Get() *SLSAProvenanceV1PredicateBuildDefinition {
	return v.value
}

func (v *NullableSLSAProvenanceV1PredicateBuildDefinition) Set(val *SLSAProvenanceV1PredicateBuildDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableSLSAProvenanceV1PredicateBuildDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableSLSAProvenanceV1PredicateBuildDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSLSAProvenanceV1PredicateBuildDefinition(val *SLSAProvenanceV1PredicateBuildDefinition) *NullableSLSAProvenanceV1PredicateBuildDefinition {
	return &NullableSLSAProvenanceV1PredicateBuildDefinition{value: val, isSet: true}
}

func (v NullableSLSAProvenanceV1PredicateBuildDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSLSAProvenanceV1PredicateBuildDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


