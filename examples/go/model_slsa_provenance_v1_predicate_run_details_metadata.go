/*
Secure Build API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SLSAProvenanceV1PredicateRunDetailsMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SLSAProvenanceV1PredicateRunDetailsMetadata{}

// SLSAProvenanceV1PredicateRunDetailsMetadata A structure representing the metadata of the SLSA Provenance v1 Predicate.
type SLSAProvenanceV1PredicateRunDetailsMetadata struct {
	// The timestamp of when the build completed.
	FinishedOn NullableTime `json:"finishedOn,omitempty"`
	// Identifies this particular build invocation, which can be useful for finding associated logs or other ad-hoc analysis. The exact meaning and format is defined by builder.id; by default it is treated as opaque and case-sensitive. The value SHOULD be globally unique.
	InvocationId NullableString `json:"invocationId,omitempty"`
	// The timestamp of when the build started.
	StartedOn NullableTime `json:"startedOn,omitempty"`
}

// NewSLSAProvenanceV1PredicateRunDetailsMetadata instantiates a new SLSAProvenanceV1PredicateRunDetailsMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSLSAProvenanceV1PredicateRunDetailsMetadata() *SLSAProvenanceV1PredicateRunDetailsMetadata {
	this := SLSAProvenanceV1PredicateRunDetailsMetadata{}
	return &this
}

// NewSLSAProvenanceV1PredicateRunDetailsMetadataWithDefaults instantiates a new SLSAProvenanceV1PredicateRunDetailsMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSLSAProvenanceV1PredicateRunDetailsMetadataWithDefaults() *SLSAProvenanceV1PredicateRunDetailsMetadata {
	this := SLSAProvenanceV1PredicateRunDetailsMetadata{}
	return &this
}

// GetFinishedOn returns the FinishedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) GetFinishedOn() time.Time {
	if o == nil || IsNil(o.FinishedOn.Get()) {
		var ret time.Time
		return ret
	}
	return *o.FinishedOn.Get()
}

// GetFinishedOnOk returns a tuple with the FinishedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) GetFinishedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FinishedOn.Get(), o.FinishedOn.IsSet()
}

// HasFinishedOn returns a boolean if a field has been set.
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) HasFinishedOn() bool {
	if o != nil && o.FinishedOn.IsSet() {
		return true
	}

	return false
}

// SetFinishedOn gets a reference to the given NullableTime and assigns it to the FinishedOn field.
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) SetFinishedOn(v time.Time) {
	o.FinishedOn.Set(&v)
}
// SetFinishedOnNil sets the value for FinishedOn to be an explicit nil
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) SetFinishedOnNil() {
	o.FinishedOn.Set(nil)
}

// UnsetFinishedOn ensures that no value is present for FinishedOn, not even an explicit nil
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) UnsetFinishedOn() {
	o.FinishedOn.Unset()
}

// GetInvocationId returns the InvocationId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) GetInvocationId() string {
	if o == nil || IsNil(o.InvocationId.Get()) {
		var ret string
		return ret
	}
	return *o.InvocationId.Get()
}

// GetInvocationIdOk returns a tuple with the InvocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) GetInvocationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InvocationId.Get(), o.InvocationId.IsSet()
}

// HasInvocationId returns a boolean if a field has been set.
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) HasInvocationId() bool {
	if o != nil && o.InvocationId.IsSet() {
		return true
	}

	return false
}

// SetInvocationId gets a reference to the given NullableString and assigns it to the InvocationId field.
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) SetInvocationId(v string) {
	o.InvocationId.Set(&v)
}
// SetInvocationIdNil sets the value for InvocationId to be an explicit nil
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) SetInvocationIdNil() {
	o.InvocationId.Set(nil)
}

// UnsetInvocationId ensures that no value is present for InvocationId, not even an explicit nil
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) UnsetInvocationId() {
	o.InvocationId.Unset()
}

// GetStartedOn returns the StartedOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) GetStartedOn() time.Time {
	if o == nil || IsNil(o.StartedOn.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartedOn.Get()
}

// GetStartedOnOk returns a tuple with the StartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) GetStartedOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedOn.Get(), o.StartedOn.IsSet()
}

// HasStartedOn returns a boolean if a field has been set.
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) HasStartedOn() bool {
	if o != nil && o.StartedOn.IsSet() {
		return true
	}

	return false
}

// SetStartedOn gets a reference to the given NullableTime and assigns it to the StartedOn field.
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) SetStartedOn(v time.Time) {
	o.StartedOn.Set(&v)
}
// SetStartedOnNil sets the value for StartedOn to be an explicit nil
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) SetStartedOnNil() {
	o.StartedOn.Set(nil)
}

// UnsetStartedOn ensures that no value is present for StartedOn, not even an explicit nil
func (o *SLSAProvenanceV1PredicateRunDetailsMetadata) UnsetStartedOn() {
	o.StartedOn.Unset()
}

func (o SLSAProvenanceV1PredicateRunDetailsMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SLSAProvenanceV1PredicateRunDetailsMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.FinishedOn.IsSet() {
		toSerialize["finishedOn"] = o.FinishedOn.Get()
	}
	if o.InvocationId.IsSet() {
		toSerialize["invocationId"] = o.InvocationId.Get()
	}
	if o.StartedOn.IsSet() {
		toSerialize["startedOn"] = o.StartedOn.Get()
	}
	return toSerialize, nil
}

type NullableSLSAProvenanceV1PredicateRunDetailsMetadata struct {
	value *SLSAProvenanceV1PredicateRunDetailsMetadata
	isSet bool
}

func (v NullableSLSAProvenanceV1PredicateRunDetailsMetadata) Get() *SLSAProvenanceV1PredicateRunDetailsMetadata {
	return v.value
}

func (v *NullableSLSAProvenanceV1PredicateRunDetailsMetadata) Set(val *SLSAProvenanceV1PredicateRunDetailsMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableSLSAProvenanceV1PredicateRunDetailsMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableSLSAProvenanceV1PredicateRunDetailsMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSLSAProvenanceV1PredicateRunDetailsMetadata(val *SLSAProvenanceV1PredicateRunDetailsMetadata) *NullableSLSAProvenanceV1PredicateRunDetailsMetadata {
	return &NullableSLSAProvenanceV1PredicateRunDetailsMetadata{value: val, isSet: true}
}

func (v NullableSLSAProvenanceV1PredicateRunDetailsMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSLSAProvenanceV1PredicateRunDetailsMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


