/*
Secure Build API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BuildOutputManifest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuildOutputManifest{}

// BuildOutputManifest struct for BuildOutputManifest
type BuildOutputManifest struct {
	Outputs *map[string]BuildOutput `json:"outputs,omitempty"`
}

// NewBuildOutputManifest instantiates a new BuildOutputManifest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildOutputManifest() *BuildOutputManifest {
	this := BuildOutputManifest{}
	return &this
}

// NewBuildOutputManifestWithDefaults instantiates a new BuildOutputManifest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildOutputManifestWithDefaults() *BuildOutputManifest {
	this := BuildOutputManifest{}
	return &this
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *BuildOutputManifest) GetOutputs() map[string]BuildOutput {
	if o == nil || IsNil(o.Outputs) {
		var ret map[string]BuildOutput
		return ret
	}
	return *o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildOutputManifest) GetOutputsOk() (*map[string]BuildOutput, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *BuildOutputManifest) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given map[string]BuildOutput and assigns it to the Outputs field.
func (o *BuildOutputManifest) SetOutputs(v map[string]BuildOutput) {
	o.Outputs = &v
}

func (o BuildOutputManifest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuildOutputManifest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	return toSerialize, nil
}

type NullableBuildOutputManifest struct {
	value *BuildOutputManifest
	isSet bool
}

func (v NullableBuildOutputManifest) Get() *BuildOutputManifest {
	return v.value
}

func (v *NullableBuildOutputManifest) Set(val *BuildOutputManifest) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildOutputManifest) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildOutputManifest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildOutputManifest(val *BuildOutputManifest) *NullableBuildOutputManifest {
	return &NullableBuildOutputManifest{value: val, isSet: true}
}

func (v NullableBuildOutputManifest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildOutputManifest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


